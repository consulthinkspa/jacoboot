
name: POC maven - sonarqube - nexus

on:
  pull_request:
    branches:
      - main

jobs:
  qa_and_vs_check:
    runs-on: [ ubuntu-20.04 ]
    name: Test, vulnerability checks and report coverage
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        #server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        #settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Maven - run tests and vulnerability check
      run: mvn verify org.owasp:dependency-check-maven:6.0.2:check
            -Dformat=XML
            -DprettyPrint=true
            -DcveValidForHours=12

    - name: Maven - generate report coverage
      run: mvn org.codehaus.mojo:sonar-maven-plugin:3.7.0.1746:sonar
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }}
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.dependencyCheck.xmlReportPath=./target/dependency-check-report.xml
            -Dsonar.dependencyCheck.severity.blocker=7.0
            #-Dsonar.dependencyCheck.securityHotspot=true
            #-Dsonar.projectKey=com.eldisol:jacoboot
            #-Dsonar.projectName=jacoboot
            #-Dsonar.projectVersion=0.0.1-SNAPSHOT
            #-Dsonar.sources=.
            #-Dsonar.sourceEncoding=UTF-8

    - name: Sonarqube Quality Gate
      shell: bash
      run: ./.github/scripts/sonar_quality_gate.sh
            ${{ secrets.SONARQUBE_HOST }}
            ${{ secrets.SONARQUBE_TOKEN }}

  build_and_deploy:
    needs: qa_and_vs_check
    runs-on: [ ubuntu-20.04 ]
    name: Compile package and Deploy artifacts
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        #server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        #settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Maven - building
      run: mvn package

    - name: Nexus Repo Publish
      if: ${{ needs.qa_and_vs_check.result == 'success' }}
      uses: sonatype-nexus-community/nexus-repo-github-action@master
      with:
        serverUrl: ${{ secrets.NEXUS3_HOST }}
        username: ${{ secrets.NEXUS3_USER }}
        password: ${{ secrets.NEXUS3_PASSWORD }}
        format: maven2
        repository: maven-releases
        coordinates: groupId=com.eldisol artifactId=jacoboot version=0.0.1
        assets: extension=jar
        filename: ./target/jacoboot-0.0.1.jar
