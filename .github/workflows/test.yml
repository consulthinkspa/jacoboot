
name: POC maven - sonarqube - nexus

on:
  pull_request:
    branches:
      - test

jobs:
  qa_deploy:
    runs-on: [ ubuntu-20.04 ]
    name: Quality Assurance checks and Deploy test
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        #server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        #settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Data mining - get pom informations
      run: |
        echo "POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        echo "POM_GROUPID=$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout)" >> $GITHUB_ENV
        echo "POM_ARTIFACTID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV
        echo "POM_NAME=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)" >> $GITHUB_ENV
        echo "POM_DESCRIPTION=$(mvn help:evaluate -Dexpression=project.description -q -DforceStdout)" >> $GITHUB_ENV

      # To Do: with Ansible
    - name: Get application from nexus
      run: curl -v -O ${{ secrets.NEXUS3_HOST }}/repository/maven-snapshots/$POM_GROUPID/$POM_ARTIFACTID/$POM_VERSION/$POM_NAME-$POM_VERSION.jar

      # To Do: with Ansible
    - name: Run application - demo
      run: echo "java -jar ./$POM_NAME-${POM_VERSION}-RC-SNAPSHOT.jar"

  rc_promotion:
    needs: qa_deploy
    runs-on: [ ubuntu-20.04 ]
    name: Promote snapshot package to Release Candidate (RC)
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        #server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        #settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Data mining - get pom informations
      run: |
        echo "POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        echo "POM_GROUPID=$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout)" >> $GITHUB_ENV
        echo "POM_ARTIFACTID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV
        echo "POM_NAME=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)" >> $GITHUB_ENV
        echo "POM_DESCRIPTION=$(mvn help:evaluate -Dexpression=project.description -q -DforceStdout)" >> $GITHUB_ENV

      # To Do: generate snapshot
    - name: Maven - building
      run: mvn clean package
            -Dmaven.test.skip=true
            -Dproject.version=${POM_VERSION}-RC-SNAPSHOST

    - name: Maven - deploy artifacts
      run: mvn deploy:deploy-file
            -DgroupId=$POM_GROUPID
            -DartifactId=$POM_ARTIFACTID
            -Dversion=${POM_VERSION}-RC-SNAPSHOT
            -DgeneratePom=true
            -Dpackaging=jar
            -Durl=${{ secrets.NEXUS3_HOST }}/repository/maven-snapshots
            -Dfile=./target/$POM_NAME-${POM_VERSION}-RC-SNAPSHOT.jar
            -Dusername=${{ secrets.NEXUS3_USER }}
            -Dpassword=${{ secrets.NEXUS3_PASSWORD }}
